<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

    <aop:config>
        <aop:aspect id="log" ref="logging">
            <aop:pointcut id="forAllMethods"
                          expression="execution(* com.springApp.springIoC.Developer.*(..))"/>
            <aop:before pointcut-ref="forAllMethods" method="adviceBeforeMethod"/>
            <aop:after pointcut-ref="forAllMethods" method="adviceAfterMethod"/>
            <aop:after-returning pointcut-ref="forAllMethods"
                                 returning="someValue"
                                 method="adviceAfterReturningValue"/>
            <aop:after-throwing pointcut-ref="forAllMethods"
                                throwing="e"
                                method="adviceInCaseOfExceptionThrow"/>
        </aop:aspect>
    </aop:config>

    <!-- Definition for developer bean -->
    <bean id="developer" class="com.springApp.springIoC.Developer">
        <property name="name"  value="Alex" />
        <property name="specialty"  value="Java Developer" />
        <property name="experience"  value="3" />
    </bean>

    <!-- Here we define logging aspect -->
    <bean id="logging" class="com.springApp.springIoC.Logging"/>

</beans>